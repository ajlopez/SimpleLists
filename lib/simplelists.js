var sl = (function() {    function Set(name) {        var set = { };                this.add = function (item) {            var key = item[name];                        if (set[key])                return;                            set[key] = item;        }                this.remove = function (item) {            var key = item[name];                        if (set[key])                delete set[key];        }                this.elements = function () {            var result = [];                        for (var n in set)                result.push(set[n]);                            return result;        }    }        function unique(list, name) {        var set = new Set(name);                list.forEach(function (item) {            set.add(item);        });                return set.elements();    }        function union(list, list2, name) {        var set = new Set(name);        list.forEach(function (item) {            set.add(item);        });                list2.forEach(function (item) {            set.add(item);        });                return set.elements();    }        function diff(list, list2, name) {        var set = new Set(name);        list.forEach(function (item) {            set.add(item);        });                list2.forEach(function (item) {            set.remove(item);        });                return set.elements();    }        function sum(list, names) {        if (Array.isArray(names)) {            var accum = { };                        names.forEach(function (name) {                accum[name] = 0;            });                        list.forEach(function (item) {                names.forEach(function (name) {                    var newvalue = item[name] + accum[name];                                        if (!isNaN(newvalue))                        accum[name] = newvalue;                });            });                        return accum;        }        else {            var total = 0;            var name = names;                    list.forEach(function (item) {                var newvalue = total + item[name];                                if (!isNaN(newvalue))                    total = newvalue;            });                        return total;        }    }    function project(list, names) {        var result = [];                if (!Array.isArray(names))            names = [names];                list.forEach(function (item) {            var newitem = { };                        names.forEach(function (name) {                newitem[name] = item[name];            });                        result.push(newitem);        });                return result;    }        function where(list, filter) {        var result = [];                if (typeof filter == 'function')            list.forEach(function (item) {                if (filter(item))                    result.push(item);            });        else                    list.forEach(function (item) {                if (satisfy(item, filter))                    result.push(item);            });                return result;    }        function sort(list, name, descending) {        var result = clone(list);                result.sort(function (a, b) {            var aval = a[name];            var bval = b[name];                        if (aval < bval)                if (descending)                    return 1;                else                    return -1;                            if (aval > bval)                if (descending)                    return -1;                else                    return 1;                            return 0;        });                return result;    }        function clone(list) {        return list.slice(0);    }        function satisfy(item, filter) {        for (var n in filter)            if (item[n] != filter[n])                return false;                        return true;    }        return {        project: project,        sort: sort,        where: where,        unique: unique,        union: union,        diff: diff,        sum: sum    }})();if (typeof window == 'undefined')    module.exports = sl;